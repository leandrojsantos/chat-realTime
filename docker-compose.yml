version: "3.8"

services:
  mongodb:
    image: docker.io/library/mongo:7.0
    container_name: chat-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: chatdb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - chat-network

  redis:
    image: docker.io/library/redis:7.2-alpine
    container_name: chat-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chat-network

  backend:
    build:
      context: ./back-end
      dockerfile: Dockerfile
    container_name: chat-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/chatdb?authSource=admin
      REDIS_URL: redis://redis:6379
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
      - redis
    networks:
      - chat-network
    command: yarn start

  frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    container_name: chat-frontend
    restart: unless-stopped
    environment:
      REACT_APP_SOCKET_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - chat-network
    command: yarn start

volumes:
  mongodb_data:
  redis_data:

networks:
  chat-network:
    driver: bridge
